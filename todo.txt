$Id: todo.txt,v 0.6 2002-08-31 16:28:13 psy Exp $
-------------------------------------------------------------------------------

To do for Tuesday, 3 September:

* find sweet spot
  - get a bunch of corpora, try different # of factors, different
lengths, make table
* get more summarizers

MUSICIANS: xxx sentences

% factors (a:b:g)/ % length	5	15	30	50
----------------------------------------------------------
5
10
15
20
25
30
50

------------
getallglue.ksh can be made vastly more efficient with the following
reimplementation: 

0) input: length l, list of representative sentences, alpha beta gamma
1) for each pair of representative sentences i, j
	getallglue(i, j, 0)
2) num = `wc -l < $corpus.reps`
3) head -l $corpus.reps > $corpus.sumindex
4) l -= num
5) z = 1
6) while l > 0
	num = `wc -l $corpus.$z`
	if num > l
		sort +1nr $corpus.$z | head -$l | cut -f2
		exit
	else
		cut -f2 $corpus.$z
		z++
	fi


function getallglue(x, y, z)
	g = bestglue(i,j)
	s = sim(i,j)
	if g exists
		echo $s $g >> $corpus.summary.$z
		call getallglue(i, g, z+1)
		call getallglue(g, j, z+1)

-------
Should probably remove termless documents or coherence assessment won't work
------

Use getopts for processing command-line arguments (it also generates
man pages and usage messages!  yay!)
---------


Using CVS with xemacs:

There are two packages, vc and pcl-cvs.  vc is fine for committing one 
file at a time.

To turn on pcl-cvs: M-x load-library RET pcl-cvs RET
	M-x pcl-cvs RET
To commit with either:  ^X ^Q, then type message, then ^C ^C



Recent changes:

- added initial-sentences baseline generator (only works for documents 
where the summary length is less than or equal to the number of
paragraphs)

- added a summary paragraphizer

- rewrote (in theory) the gluing algorithm

- updated user interfaces; more options

- added CVS
